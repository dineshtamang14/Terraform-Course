- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup

    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}" 
        region: "{{ region }}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{ state }}"
      register: vpcoutput

    # - debug:
        # var: vpcoutput

    - name: Create Public Subnet 1 in Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcoutput.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr: "{{ PubSub1Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub1
      register: pubsub1_output

    - name: Create Public Subnet 2 in Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcoutput.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr: "{{ PubSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub2
      register: pubsub2_output

    - name: Create Public Subnet 3 in Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcoutput.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr: "{{ PubSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub3
      register: pubsub3_output  

    - name: Create Private Subnet 1 in Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcoutput.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub1Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-privsub1
      register: privsub1_output  

    - name: Create Private Subnet 2 in Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcoutput.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-privsub2
      register: privsub2_output

    - name: Create Private Subnet 3 in Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcoutput.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-privsub3
      register: privsub3_output

    - name: Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpcoutput.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: vprofile_IGW
      register: igw_output

    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcoutput.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: VProfile-PubRT
        subnets:
          - "{{pubsub1_output.subnet.id}}"
          - "{{pubsub2_output.subnet.id}}"
          - "{{pubsub3_output.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_output.gateway_id }}"
      register: pubRT_output

    - name: Create new NAT Gateway and allocate new EIP if a nat gateway does not exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{ state }}"
        subnet_id: "{{ pubsub1_output.subnet.id }}"
        wait: yes
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: NATGW_output

    - name: Set up Private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcoutput.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: Vprofile_privRT
        subnets:
          - "{{privsub1_output.subnet.id }}"
          - "{{privsub2_output.subnet.id }}"
          - "{{privsub3_output.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NATGW_output.nat_gateway_id }}"
      register: privRT_output

    - debug:
        var: "{{ item }}"
      loop:
        - vpcoutput.vpc.id
        - pubsub1_output.subnet.id
        - pubsub2_output.subnet.id
        - pubsub3_output.subnet.id
        - privsub1_output.subnet.id
        - privsub2_ouput.subnet.id
        - privsub3_output.subnet.id
        - igw_output.gateway_id
        - pubRT_output.route_table.id
        - NATGW_output.nat_gateway_id
        - privRT_output.route_table.id
    
    - set_fact:
        vpcid: "{{ vpcoutput.vpc.id }}"
        pubsub1id: "{{ pubsub1_output.subnet.id }}"
        pubsub2id: "{{ pubsub2_output.subnet.id }}"
        pubsub3id: "{{ pubsub3_output.subnet.id }}"
        privsub1id: "{{ privsub1_output.subnet.id }}"
        privsub2id: "{{ privsub2_output.subnet.id }}"
        privsub3id: "{{ privsub3_output.subnet.id }}"
        igwid: "{{ igw_output.gateway_id }}"
        pubRTid: "{{ pubRT_output.route_table.id }}"
        NATGWid: "{{ NATGW_output.nat_gateway_id }}"
        privRTid: "{{ privRT_output.route_table.id }}"
        cacheable: yes

    - name: Create variables file for vpc output
      copy:
        content: "vpcid: {{ vpcoutput.vpc.id }}\npubsub1id: {{ pubsub1_output.subnet.id }}\npubsub2id: {{ pubsub2_output.subnet.id }}\npubsub3id: {{ pubsub3_output.subnet.id }}\nprivsub1id: {{ privsub1_output.subnet.id }}\nprivsub2id: {{ privsub2_output.subnet.id }}\nprivsub3id: {{ privsub3_output.subnet.id }}\nigwid: {{ igw_output.gateway_id }}\npubRTid: {{ pubRT_output.route_table.id }}\nNATGWid: {{ NATGW_output.nat_gateway_id }}\nprivRTid: {{ privRT_output.route_table.id }}"
        dest: vars/outputs_vars

      